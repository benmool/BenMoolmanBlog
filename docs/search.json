[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This blog was started in my Data Visualizations Class."
  },
  {
    "objectID": "posts/NBA Shots Visualizations 2022-2023 Season/index.html",
    "href": "posts/NBA Shots Visualizations 2022-2023 Season/index.html",
    "title": "NBA Shots Visualizations 2022-2023 Season",
    "section": "",
    "text": "Introduction\nI am working with some NBA data containing every shot during the 2022-2023 NBA regular season. There are 217,220 observations in this data set, meaning that there were 217,220 shots taken by players in the NBA in this season.\nI am most interested in the variables:\n\nTEAM_NAME: The name of the team that took the shot\nZONE_NAME: The location on the court where the shot was taken\nSHOT_TYPE: The type of shot taken (2PT or 3PT)\nSHOT_MADE: Whether the shot was made (TRUE) or missed (FALSE)\nQUARTER: The quarter in which the shot was taken\nMINS_LEFT: The number of minutes left in the quarter when the shot was taken\n\nData found at DomSamangy’s GitHub (https://github.com/DomSamangy/NBA_Shots_04_23)\nI am going to use this data to create some visualizations to answer the following questions:\n\nHow were teams 3-pt shooting percentages this season from different areas?\nHow clutch were NBA teams this season? Let’s look at shooting percentages across teams in the final 3 minutes of the fourth quarter.\n\n\n\nVisualizations\nLoad in data:\n\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\ntheme_set(theme_minimal())\nlibrary(here)\nnba_22_23 &lt;- read_csv(here(\"data/NBA_2023_Shots.csv\"))\n\nLook at the data:\n\nhead(nba_22_23)\n\n# A tibble: 6 × 26\n  SEASON_1 SEASON_2    TEAM_ID TEAM_NAME    PLAYER_ID PLAYER_NAME POSITION_GROUP\n     &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;         \n1     2023 2022-23  1610612764 Washington …    203078 Bradley Be… G             \n2     2023 2022-23  1610612764 Washington …    204001 Kristaps P… C             \n3     2023 2022-23  1610612764 Washington …   1628420 Monte Morr… G             \n4     2023 2022-23  1610612764 Washington …    204001 Kristaps P… C             \n5     2023 2022-23  1610612764 Washington …   1630166 Deni Avdija F             \n6     2023 2022-23  1610612764 Washington …    204001 Kristaps P… C             \n# ℹ 19 more variables: POSITION &lt;chr&gt;, GAME_DATE &lt;chr&gt;, GAME_ID &lt;dbl&gt;,\n#   HOME_TEAM &lt;chr&gt;, AWAY_TEAM &lt;chr&gt;, EVENT_TYPE &lt;chr&gt;, SHOT_MADE &lt;lgl&gt;,\n#   ACTION_TYPE &lt;chr&gt;, SHOT_TYPE &lt;chr&gt;, BASIC_ZONE &lt;chr&gt;, ZONE_NAME &lt;chr&gt;,\n#   ZONE_ABB &lt;chr&gt;, ZONE_RANGE &lt;chr&gt;, LOC_X &lt;dbl&gt;, LOC_Y &lt;dbl&gt;,\n#   SHOT_DISTANCE &lt;dbl&gt;, QUARTER &lt;dbl&gt;, MINS_LEFT &lt;dbl&gt;, SECS_LEFT &lt;dbl&gt;\n\n\nLet’s look at the top 4 teams from each conference at the end of the 2022-2023 season and visualize their 3-pt shooting percentages from different areas on the court. The top 4 teams from each conference are as follows:\n\nMilwaukee Bucks (East, 1st, 58-24)\nBoston Celtics (East, 2nd, 57-25)\nPhiladelphia 76ers (East, 3rd, 54-28)\nCleveland Cavaliers (East, 4th, 51-31)\nDenver Nuggets (West, 1st, 53-29)\nMemphis Grizzlies (West, 2nd, 51-31)\nSacramento Kings (West, 3rd, 48-34)\nPhoenix Suns (West, 4th, 45-37)\n\n\nnba_3pt_shots &lt;- nba_22_23 |&gt;\n  filter(SHOT_TYPE == \"3PT Field Goal\") |&gt;\n  group_by(TEAM_NAME, ZONE_NAME) |&gt;\n  summarise(shot_perc = mean(SHOT_MADE), .groups = \"drop_last\") |&gt;\n  filter(TEAM_NAME == \"Boston Celtics\" | \n           TEAM_NAME == \"Milwaukee Bucks\" | \n           TEAM_NAME == \"Philadelphia 76ers\" | \n           TEAM_NAME == \"Cleveland Cavaliers\" | \n           TEAM_NAME == \"Denver Nuggets\" | \n           TEAM_NAME == \"Memphis Grizzlies\" | \n           TEAM_NAME == \"Sacramento Kings\" | \n           TEAM_NAME == \"Phoenix Suns\")\n\nggplot(data = nba_3pt_shots, aes(x = TEAM_NAME, y = shot_perc)) +\n  geom_col(position = \"dodge\", aes(fill = ZONE_NAME)) +\n  coord_flip() +\n  scale_fill_viridis_d() +\n  labs(title = \"3-Point Shooting Percentages by Location\",\n       subtitle = \"Top 4 Conference Teams from 2022-2023 Season\",\n       x = \"Zone\",\n       y = \"Proportion of Shots Made\",\n       fill = \"Court Position\",\n       caption = \"Data from NBA 2022-2023 Season\") +\n  theme_minimal()\n\n\n\n\nBack Court 3-pt % is not very important to all basketball teams as it is not a common shot. The most important 3-pt % is the corner 3-pt %, as it is the shortest 3-pt shot. This can be seen in the visualisation above, as the corner 3-pt % is higher for most teams, whether it be the Left Side or the Right Side.\nLet’s look at shooting percentages across teams in the final 3 minutes of the fourth quarter.\n\nclutch_shots &lt;- nba_22_23 |&gt;\n  filter(QUARTER == 4,\n         MINS_LEFT &lt;= 3) |&gt;\n  group_by(TEAM_NAME, SHOT_MADE) |&gt;\n  summarise(n_shots = n(), .groups = \"drop_last\") |&gt;\n  ungroup() |&gt;\n  pivot_wider(names_from = SHOT_MADE, values_from = n_shots) |&gt;\n  rename(n_made = `TRUE`, n_missed = `FALSE`) |&gt;\n  mutate(n = n_made + n_missed) |&gt;\n  mutate(phat = n_made / n) |&gt;\n  mutate(se = sqrt(phat * (1 - phat) / n),\n         se_lb = phat - se,\n         se_ub = phat + se) |&gt;\n  mutate(TEAM_NAME = fct_reorder(TEAM_NAME, phat))\n\nggplot(data = clutch_shots, aes(x = TEAM_NAME)) +\n  geom_errorbar(aes(ymin = se_lb, ymax = se_ub), col = \"darkgray\") +\n  geom_point(aes(y = phat), col = \"blue\", size = 2) +\n  coord_flip() +\n  labs(title = \"Clutch Shooting in the 4th Quarter\",\n       subtitle = \"Final 3 Minutes\",\n       x = \"Team\",\n       y = \"Proportion of Shots Made\",\n       caption = \"Data from NBA 2022-2023 Regular Season\") +\n  theme_minimal()\n\n\n\n\nThe visualization above shows the proportion of shots made by each team in the final 3 minutes of the fourth quarter. The error bars represent the 95% confidence intervals for the proportion of shots made. The confidence intervals are quite wide for most teams, which is expected given the small sample sizes for each team in this situation.\n\n\nConclusion and Wrap-Up\nIn conclusion, the visualizations above show that the corner 3-pt % is the most important 3-pt % for most teams, and that the confidence intervals for the proportion of shots made in the final 3 minutes of the fourth quarter are quite wide for most teams. If I had more time to work on this, I would look into creating heat maps for each team based on location of shots taken and whether they were made or missed. This would give a better understanding of where each team is most successful on the court. In DomSamangy’s GitHub, he has a function that creates a map background and this would be a great thing to apply to visualizations.\n\n\nConnections to Class Ideas\nIn regards to my class Data Visualization, these visualizations are effective ways of communicating information. I chose not to use all NBA teams when looking at 3-pt % by location to avoid the visualization being too cluttered, and allowing the focus to be on the location of the shots. I chose to put the teams on the y-axis and order by the proportion of shots made in the final 3 minutes of the fourth quarter when looking at the “clutchness” of teams. This allows the focus to be on the proportion of shots made, and the error bars show the uncertainty in the proportion of shots made. I also chose to use a blue color for the points and a dark gray color for the error bars to make the visualization easier to read. I also chose to use a minimal theme to make the visualization easier to read. I think these visualizations are effective ways of communicating information."
  },
  {
    "objectID": "posts/World Imports and Exports by Country/index.html",
    "href": "posts/World Imports and Exports by Country/index.html",
    "title": "World Import and Export Data",
    "section": "",
    "text": "Introduction\nI am working with some data from Kaggle on World Export & Import data. The data is from 1989 to 2021. There are 8,096 entries in the data set.\nThe data can be found here.\nI am most interested in the variables:\n\nParter Name - The country or trading partner that the data is from\nYear - The year of the data\nExport (US$ Thousand) - total value of goods and products exported by the country in thousands of US dollars\nImport (US$ Thousand) - total value of goods and products imported by the country in thousands of US dollars\n\nIt is important to note that all values of exports and imports are expressed in thousands of US dollars.\nI will be using this data to create some visualizations and to analyze the data. I am interested in exploring how exports and imports have changed over time and will look at countries with the highest exports and imports in 2021 and compare them over time. I will also create a world map that shows the percent change in exports from 2020 to 2021 for all countries in the data set.\n\n\nVisualizations\nLoad in data:\n\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(pander)\ntheme_set(theme_minimal())\nlibrary(here)\nworld_imp_exp &lt;- read_csv(here(\"data/world_import_export.csv\"))\nworld_imp_exp\n\n# A tibble: 8,096 × 33\n   `Partner Name`        Year `Export (US$ Thousand)` `Import (US$ Thousand)`\n   &lt;chr&gt;                &lt;dbl&gt;                   &lt;dbl&gt;                   &lt;dbl&gt;\n 1 Aruba                 1988                   3498.                    328.\n 2 Afghanistan           1988                 213030.                  54460.\n 3 Angola                1988                 375528.                 370703.\n 4 Anguila               1988                    367.                      4 \n 5 Albania               1988                  30104.                  47709.\n 6 Andorra               1988                  67924.                   3284.\n 7 Netherlands Antilles  1988                 104759.                  24964.\n 8 United Arab Emirates  1988                2945350.                7091824.\n 9 Argentina             1988                1136422.                1928596.\n10 Antigua and Barbuda   1988                  14407.                   2174.\n# ℹ 8,086 more rows\n# ℹ 29 more variables: `Export Product Share (%)` &lt;dbl&gt;,\n#   `Import Product Share (%)` &lt;dbl&gt;, `Revealed comparative advantage` &lt;dbl&gt;,\n#   `World Growth (%)` &lt;dbl&gt;, `Country Growth (%)` &lt;dbl&gt;,\n#   `AHS Simple Average (%)` &lt;dbl&gt;, `AHS Weighted Average (%)` &lt;dbl&gt;,\n#   `AHS Total Tariff Lines` &lt;dbl&gt;,\n#   `AHS Dutiable Tariff Lines Share (%)` &lt;dbl&gt;, …\n\n\nLet’s tidy up some of the column names and select our variables of interest.\n\nworld_imp_exp &lt;- world_imp_exp |&gt;\n  rename(Partner_Name = `Partner Name`,\n         Export_Thousand = `Export (US$ Thousand)`,\n         Import_Thousand = `Import (US$ Thousand)`) |&gt;\n  select(Partner_Name, Year, Export_Thousand, Import_Thousand)\n\nFilter the data set to find the top 5 countries with the highest exports in 2023, and compare how they have changed over time.\n\ntop_5_exp_2023 &lt;- world_imp_exp |&gt;\n  filter(Year == 2021) |&gt;\n  arrange(desc(Export_Thousand)) |&gt;\n  slice(5:7, 10, 12) |&gt;\n  select(Partner_Name, Year, Export_Thousand) |&gt;\n  mutate(Partner_Name = fct_reorder(Partner_Name, Export_Thousand))\ntop_5_exp_2023\n\n# A tibble: 5 × 3\n  Partner_Name    Year Export_Thousand\n  &lt;fct&gt;          &lt;dbl&gt;           &lt;dbl&gt;\n1 United States   2021     3291674759.\n2 China           2021     2419607092.\n3 Germany         2021     1353626273.\n4 United Kingdom  2021     1010705115.\n5 Japan           2021      704318189.\n\n# create vector of top 5 countries\ntop_5_exp_2023_vec &lt;- top_5_exp_2023$Partner_Name\n# filter data set to only include top 5 countries\n# also convert export values to billions\ntop_5_exp_df &lt;- world_imp_exp |&gt;\n  filter(Partner_Name %in% top_5_exp_2023_vec) |&gt;\n  mutate(Export_Billion = Export_Thousand / 1000000) |&gt;\n  select(Partner_Name, Year, Export_Billion)\n\nCreate a plot to visualize the top 5 countries with the highest exports in 2021 have changed over time (since 1989).\n\nggplot(data = top_5_exp_df, aes(x = Year, y = Export_Billion, color = Partner_Name)) +\n  geom_line() +\n  labs(title = \"Top 5 Countries with the Highest Exports in 2023\",\n       x = \"Year\",\n       y = \"Export (US$ Billion)\",\n       color = \"Country\") +\n  scale_color_viridis_d() +\n  theme_minimal()\n\n\n\n\nThe plot above shows the top 5 countries with the highest exports in 2021 and how they have changed over time. The United States has the highest exports in 2021, followed by China, Germany, The United Kingdom and Japan. The United States has had the highest exports over time. All countries have increased in exports from 1989 to 2021.\nFilter the data set to find the top 5 countries with the highest imports in 2023, and compare how they have changed over time.\n\ntop_5_imp_2023 &lt;- world_imp_exp |&gt;\n  filter(Year == 2021) |&gt;\n  arrange(desc(Import_Thousand)) |&gt;\n  slice(4, 6, 7, 10, 11) |&gt;\n  select(Partner_Name, Year, Import_Thousand) |&gt;\n  mutate(Partner_Name = fct_reorder(Partner_Name, Import_Thousand))\ntop_5_imp_2023\n\n# A tibble: 5 × 3\n  Partner_Name   Year Import_Thousand\n  &lt;fct&gt;         &lt;dbl&gt;           &lt;dbl&gt;\n1 China          2021     3383435785.\n2 United States  2021     1703893335.\n3 Germany        2021     1538830199.\n4 Japan          2021      850187994.\n5 Korea, Rep.    2021      731208978.\n\n# create vector of top 5 countries\ntop_5_imp_2023_vec &lt;- top_5_imp_2023$Partner_Name\n# filter data set to only include top 5 countries\n# also convert export values to billions\ntop_5_imp_df &lt;- world_imp_exp |&gt;\n  filter(Partner_Name %in% top_5_imp_2023_vec) |&gt;\n  mutate(Import_Billion = Import_Thousand / 1000000) |&gt;\n  select(Partner_Name, Year, Import_Billion)\n\nCreate a plot to visualize the top 5 countries with the highest imports in 2021 have changed over time (since 1989).\n\nggplot(data = top_5_imp_df, aes(x = Year, y = Import_Billion, color = Partner_Name)) +\n  geom_line() +\n  labs(title = \"Top 5 Countries with the Highest Imports in 2021\",\n       x = \"Year\",\n       y = \"Import (US$ Billion)\",\n       color = \"Country\") +\n  scale_color_viridis_d() +\n  theme_minimal()\n\n\n\n\nThe plot above shows the top 5 countries with the highest imports in 2021 and how they have changed over time. The China has the highest imports in 2021, followed by the United States and Germany which are very close together. All countries have seen an increase in imports from 1989 to 2021.\nLoad in world data to create a world map.\n\n# load in data for world map\nworld_df &lt;- map_data(\"world\")\n# change USA in region to United States\nworld_df &lt;- world_df |&gt;\n  mutate(region = ifelse(region == \"USA\", \"United States\", region))\n\nCreate a world map that shows the percent change in exports from 2020 to 2021 for all countries in the data set.\n\n# create df that has percent change in exports from 2020 to 2021 for all countries\nperc_change_exp &lt;- world_imp_exp |&gt;\n  filter(Year == 2020 | Year == 2021) |&gt;\n  group_by(Partner_Name) |&gt;\n  summarise(perc_change = ((last(Export_Thousand) - first(Export_Thousand)) /\n                             first(Export_Thousand)) * 100) |&gt;\n  mutate(perc_change = round(perc_change, 2))\n\n# create plot df that combines world_df with perc_change_exp\nfull_df_exp &lt;- left_join(world_df, perc_change_exp, by = c(\"region\" = \"Partner_Name\"))\n\n# create world map\nggplot(data = full_df_exp, aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = perc_change), color = \"black\") +\n  coord_map(projection = \"mercator\", xlim = c(-180, 180)) +\n  scale_fill_gradient2(low = \"blue\", mid = \"white\", high = \"red\", midpoint = 0) +\n  labs(title = \"Percent Change in Exports from 2020 to 2021\",\n       fill = \"Percent Change\") +\n  theme_minimal()\n\n\n\n\nCountries in gray are not included in the data set. The map shows that most countries have seen a small increase in exports from 2020 to 2021. If I were to have more time, I would like to modify the percent change scale or limit the countries I am looking at to improve the ability to compare different countries, rather than just observing an overall increase across most countries.\nCreate a world map that shows the percent change in imports from 2020 to 2021 for all countries in the data set.\n\n# create df that has percent change in imports from 2020 to 2021 for all countries\nperc_change_imp &lt;- world_imp_exp |&gt;\n  filter(Year == 2020 | Year == 2021) |&gt;\n  group_by(Partner_Name) |&gt;\n  summarise(perc_change = ((last(Import_Thousand) - first(Import_Thousand)) /\n                             first(Import_Thousand)) * 100) |&gt;\n  mutate(perc_change = round(perc_change, 2))\n\n# create plot df that combines world_df with perc_change_imp\nfull_df_imp &lt;- left_join(world_df, perc_change_imp, by = c(\"region\" = \"Partner_Name\"))\n\n# create world map\nggplot(data = full_df_imp, aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = perc_change), color = \"black\") +\n  coord_map(projection = \"mercator\", xlim = c(-180, 180)) +\n  scale_fill_gradient2(low = \"blue\", mid = \"white\", high = \"red\", midpoint = 0) +\n  labs(title = \"Percent Change in Imports from 2020 to 2021\",\n       fill = \"Percent Change\") +\n  theme_minimal()\n\n\n\n\nCountries in gray are not included in the data set. The map shows that most countries have seen a slight increase in imports from 2020 to 2021. If I were to have more time, I would like to modify the percent change scale or limit the countries I am looking at to improve the ability to compare different countries, rather than just observing an overall increase across most countries, in the same fashion as the map above.\n\n\nConclusion and Wrap-Up\nIn conclusion, the data set I used to analyze the trade of goods between countries from 1989 to 2021 was very interesting. I was able to find the top 5 countries with the highest exports and imports in 2021 and compare how they have changed over time. I was also able to create world maps that show the percent change in exports and imports from 2020 to 2021 for all countries in the data set.\nIf I were to have more time, I would like to modify the percent change scale or limit the countries I am looking at to improve the ability to compare different countries, rather than just observing an overall increase across most countries. I would also like to create world maps that shows the percent changes in exports and imports from 1989 to 2021 for all countries in the data set. This would allow me to see how the trade of goods between countries has changed over time.\n\n\nConnections to Class Ideas\nThis project connects to many of the ideas we have learned in class. I used the mapping features we have learned in class to display the data in a way that is easy to understand. I also used the dplyr package to manipulate the data in a way that made it easier to analyze. I think these visualizations are effective ways of communicating information, but I know that my world maps can be improved upon."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BenMoolmanBlog",
    "section": "",
    "text": "World Import and Export Data\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nFeb 23, 2024\n\n\nBen Moolman\n\n\n\n\n\n\n  \n\n\n\n\nNBA Shots Visualizations 2022-2023 Season\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nFeb 9, 2024\n\n\nBen Moolman\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJan 29, 2024\n\n\nBen Moolman\n\n\n\n\n\n\nNo matching items"
  }
]