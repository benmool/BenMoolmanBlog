football_df |>
filter(MP >= 10) |>
group_by(Player) |>
summarise(drbl_suc = mean(`ToSuc%`),
drbl_tkl = mean(`ToTkl%`)) |>
arrange(desc(drbl_suc)) |>
head(10)
#| output: false
#| output: false
#| warning: false
#| output: false
#| warning: false
library(tidyverse)
library(readr)
library(here)
# Load in the data:
soccer <- read_delim(here("data/2022-2023_Football_Player_Stats.csv"), delim = ";")
soccer %>%
group_by(Comp) %>%
summarize(mean_shots = sum(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Squad = fct_reorder(Comp, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Comp, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Shots per Game by League",
subtitle = "Data taken from the 2022-2023 Season",
x = "League",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
soccer %>%
group_by(Comp) %>%
summarize(mean_shots = mean(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Squad = fct_reorder(Comp, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Comp, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Shots per Game by League",
subtitle = "Data taken from the 2022-2023 Season",
x = "League",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
test <- soccer |>
mutate(Pos = as.factor(Pos))
test |> levels(Pos)
test <- soccer |>
mutate(Pos = as.factor(Pos))
levels(test$Pos)
soccer %>%
filter(Pos %in% c("FW", "MF", "MFFW", "FWMF", "FWDF", "DFFW")) |>
group_by(Squad) %>%
summarize(mean_shots = mean(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Squad = fct_reorder(Squad, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Squad, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Top 20 Clubs - Shots over Course of 2022-23 season",
x = "Player",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
soccer %>%
filter(Pos %in% c("FW", "MF", "MFFW", "FWMF", "FWDF", "DFFW")) |>
group_by(Comp) %>%
summarize(mean_shots = mean(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Squad = fct_reorder(Comp, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Comp, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Shots per Game by League",
subtitle = "Data taken from the 2022-2023 Season",
x = "League",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
soccer %>%
filter(Pos %in% c("FW", "MF", "MFFW", "FWMF", "FWDF", "DFFW")) |>
group_by(Comp) %>%
summarize(mean_shots = mean(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Comp = fct_reorder(Comp, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Comp, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Shots per Game by League",
subtitle = "Data taken from the 2022-2023 Season",
x = "League",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
soccer %>%
filter(Pos %in% c("FW", "MF", "MFFW", "FWMF", "FWDF", "DFFW")) |>
group_by(Comp) %>%
summarize(mean_shots = mean(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Comp = fct_reorder(Comp, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Comp, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Shots per Game by League",
subtitle = "Data taken from the 2022-2023 Season",
x = "League",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
soccer %>%
filter(Pos %in% c("FW", "MF", "MFFW", "FWMF", "FWDF", "DFFW")) |>
group_by(Squad) %>%
summarize(mean_shots = mean(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Squad = fct_reorder(Squad, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Squad, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Top 20 Clubs - Shots per Game for Forwards and Midfielders",
subtitle = "Data taken from the 2022-2023 Season",
x = "Player",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
soccer$Player[soccer$Player == "Almer\xeda"] <- "Almeria"
soccer %>% select(Player, Nation, Pos, Squad, Comp, Goals) %>%
arrange(desc(Goals)) %>%
head() %>% pander::pander()
soccer %>%
group_by(Pos) %>%
summarise(Total_Goals = sum(Goals)) %>%
arrange(desc(Total_Goals)) %>% pander::pander()
soccer %>%
group_by(Comp) %>%
summarise(Total_Goals = sum(Goals)) %>%
arrange(desc(Total_Goals)) %>% pander::pander()
soccer %>%
filter(Pos %in% c("FW", "MF", "MFFW", "FWMF", "FWDF", "DFFW")) |>
group_by(Comp) %>%
summarize(mean_shots = mean(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Comp = fct_reorder(Comp, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Comp, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Shots per Game by League For Forwards and Midfielders",
subtitle = "Data taken from the 2022-2023 Season",
x = "League",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
soccer %>%
filter(Pos %in% c("FW", "MF", "MFFW", "FWMF", "FWDF", "DFFW")) |>
group_by(Comp) %>%
summarize(mean_shots = mean(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Comp = fct_reorder(Comp, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Comp, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Shots per Game by League For Forwards and Midfielders",
subtitle = "Data taken from the 2022-2023 Season",
x = "League",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
soccer %>% select(Player, Nation, Pos, Squad, Comp, Goals) %>%
arrange(desc(Goals)) %>%
head(10) %>% pander::pander()
soccer %>% select(Player, Nation, Pos, Squad, Comp, Goals) %>%
arrange(desc(Goals)) %>%
slice(1:10) %>% pander::pander()
soccer %>% select(Player, Nation, Pos, Squad, Comp, Goals) %>%
arrange(desc(Goals)) %>%
slice(1:10)
library(pander)
soccer %>% select(Player, Nation, Pos, Squad, Comp, Goals) %>%
arrange(desc(Goals)) %>%
slice(1:10) %>% pander()
soccer %>% select(Player, Nation, Pos, Squad, Comp, Goals) %>%
arrange(desc(Goals)) %>%
slice(1:10)
soccer %>% select(Player, Nation, Pos, Squad, Comp, Goals) %>%
arrange(desc(Goals)) %>%
slice(1:10) %>% pander()
# Set the encoding to UTF-8
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
soccer %>% select(Player, Nation, Pos, Squad, Comp, Goals) %>%
arrange(desc(Goals)) %>%
slice(1:10) %>% pander()
soccer %>% select(Player, Nation, Pos, Squad, Comp, Goals) %>%
arrange(desc(Goals)) %>%
slice(1:10)
soccer %>% select(Player, Nation, Pos, Squad, Comp, Assists) %>%
arrange(desc(Assists)) %>%
slice(1:10)
soccer %>%
group_by(Pos) %>%
summarise(Total_Goals = sum(Goals)) %>%
arrange(desc(Total_Goals)) %>% pander::pander()
soccer %>%
filter(Pos %in% c("FW", "MF", "MFFW", "FWMF", "FWDF", "DFFW")) |>
group_by(Squad) %>%
summarize(mean_shots = mean(Shots, na.rm = TRUE),
sd_shots = sd(Shots, na.rm = TRUE),
n_players = n()) %>%
mutate(se_shots = (sd_shots / sqrt(n_players)),
lb_se = mean_shots - se_shots,
ub_se = mean_shots + se_shots) %>%
arrange(desc(mean_shots)) %>%  # Sort by mean_shots in descending order
head(20) %>%  # Select the top 20 players
mutate(Squad = fct_reorder(Squad, mean_shots)) %>%  # Reverse the order of the levels of the factor
ggplot(aes(x = Squad, y = mean_shots)) +
geom_errorbar(aes(ymin = lb_se, ymax = ub_se), width = 0.2, color = "darkred") +
geom_point() +
geom_line(color = "red") +
labs(title = "Top 20 Clubs - Shots per Game for Forwards and Midfielders",
subtitle = "Data taken from the 2022-2023 Season",
x = "Player",
y = "Shots") + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
library(tidyverse)
library(dplyr)
library(ggplot2)
theme_set(theme_minimal())
library(here)
nba_22_23 <- read_csv(here("data/NBA_2023_Shots.csv"))
head(nba_22_23)
nba_3pt_shots <- nba_22_23 |>
filter(SHOT_TYPE == "3PT Field Goal") |>
group_by(TEAM_NAME, ZONE_NAME) |>
summarise(shot_perc = mean(SHOT_MADE), .groups = "drop_last") |>
filter(TEAM_NAME == "Boston Celtics" |
TEAM_NAME == "Milwaukee Bucks" |
TEAM_NAME == "Philadelphia 76ers" |
TEAM_NAME == "Cleveland Cavaliers" |
TEAM_NAME == "Denver Nuggets" |
TEAM_NAME == "Memphis Grizzlies" |
TEAM_NAME == "Sacramento Kings" |
TEAM_NAME == "Phoenix Suns")
ggplot(data = nba_3pt_shots, aes(x = TEAM_NAME, y = shot_perc)) +
geom_col(position = "dodge", aes(fill = ZONE_NAME)) +
coord_flip() +
scale_fill_viridis_d() +
labs(title = "3-Point Shooting Percentages by Location",
subtitle = "Top 4 Conference Teams from 2022-2023 Season",
x = "Zone",
y = "Proportion of Shots Made",
fill = "Court Position",
caption = "Data from NBA 2022-2023 Season") +
theme_minimal()
clutch_shots <- nba_22_23 |>
filter(QUARTER == 4,
MINS_LEFT <= 3) |>
group_by(TEAM_NAME, SHOT_MADE) |>
summarise(n_shots = n(), .groups = "drop_last") |>
ungroup() |>
pivot_wider(names_from = SHOT_MADE, values_from = n_shots) |>
rename(n_made = `TRUE`, n_missed = `FALSE`) |>
mutate(n = n_made + n_missed) |>
mutate(phat = n_made / n) |>
mutate(se = sqrt(phat * (1 - phat) / n),
se_lb = phat - se,
se_ub = phat + se) |>
mutate(TEAM_NAME = fct_reorder(TEAM_NAME, phat))
ggplot(data = clutch_shots, aes(x = TEAM_NAME)) +
geom_errorbar(aes(ymin = se_lb, ymax = se_ub), col = "darkgray") +
geom_point(aes(y = phat), col = "blue", size = 2) +
coord_flip() +
labs(title = "Clutch Shooting in the 4th Quarter",
subtitle = "Final 3 Minutes",
x = "Team",
y = "Proportion of Shots Made",
caption = "Data from NBA 2022-2023 Regular Season") +
theme_minimal()
```{r}
library(plotly)
nba_3pt_shots <- nba_22_23 |>
filter(SHOT_TYPE == "3PT Field Goal") |>
group_by(TEAM_NAME, ZONE_NAME) |>
summarise(shot_perc = mean(SHOT_MADE), .groups = "drop_last") |>
filter(TEAM_NAME == "Boston Celtics" |
TEAM_NAME == "Milwaukee Bucks" |
TEAM_NAME == "Philadelphia 76ers" |
TEAM_NAME == "Cleveland Cavaliers" |
TEAM_NAME == "Denver Nuggets" |
TEAM_NAME == "Memphis Grizzlies" |
TEAM_NAME == "Sacramento Kings" |
TEAM_NAME == "Phoenix Suns")
ggplot(data = nba_3pt_shots, aes(x = TEAM_NAME, y = shot_perc)) +
geom_col(position = "dodge", aes(fill = ZONE_NAME)) +
coord_flip() +
scale_fill_viridis_d() +
labs(title = "3-Point Shooting Percentages by Location",
subtitle = "Top 4 Conference Teams from 2022-2023 Season",
x = "Zone",
y = "Proportion of Shots Made",
fill = "Court Position",
caption = "Data from NBA 2022-2023 Season") +
theme_minimal()
nba_3pt_shots
nba_22_23
nba_3pt_shots
nba_3pt_shots <- nba_22_23 |>
filter(SHOT_TYPE == "3PT Field Goal") |>
group_by(TEAM_NAME, ZONE_NAME) |>
summarise(shot_perc = mean(SHOT_MADE),
total_shots = sum(SHOT_MADE),
.groups = "drop_last") |>
filter(TEAM_NAME == "Boston Celtics" |
TEAM_NAME == "Milwaukee Bucks" |
TEAM_NAME == "Philadelphia 76ers" |
TEAM_NAME == "Cleveland Cavaliers" |
TEAM_NAME == "Denver Nuggets" |
TEAM_NAME == "Memphis Grizzlies" |
TEAM_NAME == "Sacramento Kings" |
TEAM_NAME == "Phoenix Suns")
nba_3pt_shots
ggplot(data = nba_3pt_shots, aes(x = TEAM_NAME, y = shot_perc, label = "total_shots")) +
geom_col(position = "dodge", aes(fill = ZONE_NAME)) +
coord_flip() +
scale_fill_viridis_d() +
labs(title = "3-Point Shooting Percentages by Location",
subtitle = "Top 4 Conference Teams from 2022-2023 Season",
x = "Zone",
y = "Proportion of Shots Made",
fill = "Court Position",
caption = "Data from NBA 2022-2023 Season") +
theme_minimal()
ggplotly(plot, tooltip = "label")
plot <- ggplot(data = nba_3pt_shots, aes(x = TEAM_NAME, y = shot_perc, label = "total_shots")) +
geom_col(position = "dodge", aes(fill = ZONE_NAME)) +
coord_flip() +
scale_fill_viridis_d() +
labs(title = "3-Point Shooting Percentages by Location",
subtitle = "Top 4 Conference Teams from 2022-2023 Season",
x = "Zone",
y = "Proportion of Shots Made",
fill = "Court Position",
caption = "Data from NBA 2022-2023 Season") +
theme_minimal()
ggplotly(plot, tooltip = "label")
plot <- ggplot(data = nba_3pt_shots, aes(x = TEAM_NAME, y = shot_perc, label = total_shots)) +
geom_col(position = "dodge", aes(fill = ZONE_NAME)) +
coord_flip() +
scale_fill_viridis_d() +
labs(title = "3-Point Shooting Percentages by Location",
subtitle = "Top 4 Conference Teams from 2022-2023 Season",
x = "Zone",
y = "Proportion of Shots Made",
fill = "Court Position",
caption = "Data from NBA 2022-2023 Season") +
theme_minimal()
ggplotly(plot, tooltip = "label")
nba_3pt_shots
nba_3pt_shots <- nba_22_23 |>
filter(SHOT_TYPE == "3PT Field Goal") |>
group_by(TEAM_NAME, ZONE_NAME) |>
summarise(shot_perc = mean(SHOT_MADE),
total_shots = n(),
.groups = "drop_last") |>
filter(TEAM_NAME == "Boston Celtics" |
TEAM_NAME == "Milwaukee Bucks" |
TEAM_NAME == "Philadelphia 76ers" |
TEAM_NAME == "Cleveland Cavaliers" |
TEAM_NAME == "Denver Nuggets" |
TEAM_NAME == "Memphis Grizzlies" |
TEAM_NAME == "Sacramento Kings" |
TEAM_NAME == "Phoenix Suns")
nba_3pt_shots
nba_3pt_shots <- nba_22_23 |>
filter(SHOT_TYPE == "3PT Field Goal") |>
group_by(TEAM_NAME, ZONE_NAME) |>
summarise(shot_perc = mean(SHOT_MADE),
total_shots = n(),
.groups = "drop_last") |>
filter(TEAM_NAME == "Boston Celtics" |
TEAM_NAME == "Milwaukee Bucks" |
TEAM_NAME == "Philadelphia 76ers" |
TEAM_NAME == "Cleveland Cavaliers" |
TEAM_NAME == "Denver Nuggets" |
TEAM_NAME == "Memphis Grizzlies" |
TEAM_NAME == "Sacramento Kings" |
TEAM_NAME == "Phoenix Suns")
plot <- ggplot(data = nba_3pt_shots, aes(x = TEAM_NAME, y = shot_perc, label = total_shots)) +
geom_col(position = "dodge", aes(fill = ZONE_NAME)) +
coord_flip() +
scale_fill_viridis_d() +
labs(title = "3-Point Shooting Percentages by Location",
subtitle = "Top 4 Conference Teams from 2022-2023 Season",
x = "Zone",
y = "Proportion of Shots Made",
fill = "Court Position",
caption = "Data from NBA 2022-2023 Season") +
theme_minimal()
ggplotly(plot, tooltip = "label")
ggplotly(plot, tooltip = c("label", "label2"))
plot <- ggplot(data = nba_3pt_shots, aes(x = TEAM_NAME, y = shot_perc,
label = total_shots,
label2 = shot_perc)) +
geom_col(position = "dodge", aes(fill = ZONE_NAME)) +
coord_flip() +
scale_fill_viridis_d() +
labs(title = "3-Point Shooting Percentages by Location",
subtitle = "Top 4 Conference Teams from 2022-2023 Season",
x = "Zone",
y = "Proportion of Shots Made",
fill = "Court Position",
caption = "Data from NBA 2022-2023 Season") +
theme_minimal()
ggplotly(plot, tooltip = c("label", "label2"))
library(tidyverse)
library(dplyr)
library(ggplot2)
theme_set(theme_minimal())
library(here)
library(plotly)
nba_22_23 <- read_csv(here("data/NBA_2023_Shots.csv"))
head(nba_22_23)
nba_3pt_shots <- nba_22_23 |>
filter(SHOT_TYPE == "3PT Field Goal") |>
group_by(TEAM_NAME, ZONE_NAME) |>
summarise(shot_perc = mean(SHOT_MADE),
total_shots = n(),
.groups = "drop_last") |>
filter(TEAM_NAME == "Boston Celtics" |
TEAM_NAME == "Milwaukee Bucks" |
TEAM_NAME == "Philadelphia 76ers" |
TEAM_NAME == "Cleveland Cavaliers" |
TEAM_NAME == "Denver Nuggets" |
TEAM_NAME == "Memphis Grizzlies" |
TEAM_NAME == "Sacramento Kings" |
TEAM_NAME == "Phoenix Suns")
plot <- ggplot(data = nba_3pt_shots, aes(x = TEAM_NAME, y = shot_perc,
label = total_shots,
label2 = shot_perc)) +
geom_col(position = "dodge", aes(fill = ZONE_NAME)) +
coord_flip() +
scale_fill_viridis_d() +
labs(title = "3-Point Shooting Percentages by Location",
subtitle = "Top 4 Conference Teams from 2022-2023 Season",
x = "Zone",
y = "Proportion of Shots Made",
fill = "Court Position",
caption = "Data from NBA 2022-2023 Season") +
theme_minimal()
ggplotly(plot, tooltip = c("label", "label2"))
